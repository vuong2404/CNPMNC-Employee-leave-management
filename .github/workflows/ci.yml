name: Node.JS CI/CD

on:
  push:
    branches: ["master"]
  pull_request: 
    branches: ["master"]

jobs:
  test: 
    name: Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend/

    strategy: 
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      - name: Use Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v3 # was "v2" before
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: NPM install, build and test
        run: |
          npm ci
          npm run build --if-present
          npm run test
  # Heavily modified deploy job to fit render.com
  deploy:
    name: Deploy
    needs: [test] # Our tests must pass in order to run the deploy job
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://elms-fb1g.onrender.com

    defaults:
      run:
        working-directory: ./backend/

    steps: 
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }} # Can be found as part of the Deploy Hook
          api-key: ${{ secrets.RENDER_API_KEY }} # Create your API key in Render Dashboard > Account Settings
          
      - name: Wait for deploy to complete
        id: wait_for_deploy
        run: |
          while [[ "$(curl -s -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
                    -H 'Accept: application/vnd.github.v3+json' \
                    "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ steps.render_deploy.outputs.run_id }}/deployments" | jq -r '.[0].state')" == "pending" ]]; do
            echo "Deployment is still in progress..."
            sleep 10
          done
  
          if [[ "$(curl -s -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
                  -H 'Accept: application/vnd.github.v3+json' \
                  "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ steps.render_deploy.outputs.run_id }}/deployments" | jq -r '.[0].state')" != "success" ]]; then
            echo "Deployment failed. Exiting."
            exit 1
            fi
